@using OutOfOffice.BlazorUI.Pages.LeaveRequest.Models
@using OutOfOffice.BlazorUI.Services.Contracts
@using OutOfOffice.Common.Dto
@using OutOfOffice.Common.ViewModels.AbsenceReason
@using System.ComponentModel.DataAnnotations
@inject IAbsenceReasonService AbsenceReasonService
@inject ISnackbar Snackbar

<EditForm Model="@formModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <MudItem xs="12" sm="7">
        <MudCard>
            <MudCardContent>
                <MudContainer Style="overflow-y: scroll">
                    <MudSelect @bind-Value="@formModel.AbsenceReasonId" Label="Absence reason" Required="true" Placeholder="Please select" For="@(() => formModel.AbsenceReasonId)">
                        <MudSelectItem Value="0">*select reason*</MudSelectItem>
                        @foreach (var reason in _absenceReasons)
                        {
                            <MudSelectItem Value="@reason.Id">@reason.ReasonTitle</MudSelectItem>
                        }
                    </MudSelect>
                    <MudTextField @bind-Value="@formModel.Comment" Label="Comment" />
                    <MudDateRangePicker @ref="_picker" Label="With action buttons" @bind-DateRange="@formModel.DateRange"
                                        AutoClose=true PickerVariant="PickerVariant.Dialog" MinDate="_minDate">
                        <PickerActions Context="pickerContext">
                            <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.ClearAsync())">Clear</MudButton>
                            <MudButton OnClick="@(() => _picker.CloseAsync(false))">Cancel</MudButton>
                            <MudButton Color="Color.Primary" OnClick="@(() => _picker.CloseAsync())">Ok</MudButton>
                        </PickerActions>
                    </MudDateRangePicker>
                </MudContainer>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Submit</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</EditForm>

@code {
    [Parameter] public LeaveRequestFormModel formModel { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    private MudDateRangePicker _picker;
    private DateTime _minDate = DateTime.Now.Date.AddDays(7);
    IEnumerable<AbsenceReasonViewModel> _absenceReasons = new List<AbsenceReasonViewModel>();

    protected override async Task OnInitializedAsync()
    {
        _absenceReasons = await AbsenceReasonService.GetAllAsync();
    }

    private async Task HandleValidSubmit()
    {
        await OnValidSubmit.InvokeAsync(null);
    }
}
