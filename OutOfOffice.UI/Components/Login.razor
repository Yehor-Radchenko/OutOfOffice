@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using OutOfOffice.Common.ViewModels
@inject AccountService AccountService
@inject NavigationManager NavigationManager
@inject CookieService CookieService

<PageTitle>Login</PageTitle>

<EditForm Model="@model" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Email" Class="mt-3"
                                  @bind-Value="model.Email" />
                    <MudTextField Label="Password" Class="mt-3"
                                  @bind-Value="model.Password" InputType="InputType.Password" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Login</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@if (success)
{
    <MudAlert Severity="Severity.Success" Class="mt-3">Login successful! Redirecting...</MudAlert>
}

@code {
    LoginViewModel model = new LoginViewModel();
    bool success;

    private async Task HandleLogin()
    {
        var responce = await AccountService.LoginAsync(model);
        if (responce.Token != null)
        {
            await CookieService.SetCookie("jwt-token", responce.Token, 7);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // Handle login failure
        }
    }
}
